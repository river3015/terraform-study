countはリソース単位でのループ
リソースを配列として扱う
count.indexでインデックスを取得できる
variablesで作成したいリソースのインデックスに合わせたパラメータ設定をしておく

countの弱点が二つ
一つはリソース単位でしかループできない
もう一つは後から配列の要素を削除しようとすると難しい
間の要素を削除すると、その次の要素に設定していた属性が削除したはずの要素に設定される（日本語下手くそ）

3名のIAMユーザーを作成する場合を考えると、二人目を削除しようと書き換えると、
想定なら一人目と三人目は残って二人目だけ削除されるというふうになる。
しかし、実際は三人目が削除され、二人目がリネームされる形となる。
これによって、三人目の人は利用できなくなり、二人目は意図せず名前が変更されてしまう。
IAMロールやIAMグループの設定をしていると、さらに権限などの問題も発生してしまう。